plugins {
    id 'java'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow'
}

repositories {
    mavenCentral()
    /*maven {
        name = 'velocitypowered-repo'
        url = 'https://nexus.velocitypowered.com/repository/maven-public/'
    }*/
    // The velocity repo is currently down, use the paper repo instead.
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
}

dependencies {
    api project(':SkinBlacklister-common')
    implementation 'org.bstats:bstats-velocity:2.2.1'

    compileOnly 'com.velocitypowered:velocity-api:3.0.0'
    annotationProcessor 'com.velocitypowered:velocity-api:3.0.0'
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

rootProject.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)

shadowJar {
    dependencies = (d) ->
        this.dependencies
        relocate 'org.bstats', 'me.noahvdaa.skinblacklister.libs.bstats'
}

tasks.build.dependsOn tasks.shadowJar
